# Project Philosophy
- Maintain simplicity
- Favor incremental improvements
- Follow YAGNI principle
- Use latest stable versions of dependencies

# Code Structure
- Group related functionality into modules
- Keep files focused and single-purpose

# Python Best Practices
- Use type hints consistently
- Import from src/utils/logger.py for logging
- Utilize environment variables from config.py
- Follow PEP 8 style guidelines
- Use dataclasses when appropriate

# LangChain Usage
- Prefer high-level interfaces
- Use built-in tools and agents
- Implement error handling for LLM calls

# Database (MongoDB)
- Keep queries simple and readable
- Include error handling for database operations
- Use type hints for database models

# FastAPI Backend
- Keep endpoints focused
- Use Pydantic models for validation
- Implement error handling and status codes

# Frontend (React/TypeScript)
- Use functional components with hooks
- Leverage Material-UI components
- Keep components simple

# Testing
- Write meaningful tests
- Use pytest fixtures effectively

# Error Handling and Logging
- Use appropriate log levels
- Include context in error messages
